dataset_params:
  batch_size: 1
  split_file: null
  test_ratio: 0.1
  train_ratio: 0.8
  val_ratio: 0.1
  graph_data_path: ./ # Directory where graph_data.npz is located

losses_metrics:
  losses:
  - loss_weight: 27.211
    metric: mae
    prediction: hamiltonian
    target: hamiltonian
  #- loss_weight: 1.0
  #  metric: mae
  #  prediction: band_gap
  #  target: band_gap
  # - loss_weight: 0.2721
  #   metric: mae
  #   prediction: band_energy
  #   target: band_energy
  #- loss_weight: 1.0
  #  metric: mae
  #  prediction: overlap
  #  target: overlap
  #- loss_weight: 1.0
  #  metric: mae
  #  prediction: peak
  #  target: peak
  # - loss_weight: 0.0
  #   metric: mae
  #   prediction: hamiltonian_imag
  #   target: hamiltonian_imag
  #- loss_weight: 0.0001
  #  metric: abs_mae
  #  prediction: wavefunction
  #  target: wavefunction
  metrics:
  - metric: mae
    prediction: hamiltonian
    target: hamiltonian
  #- metric: mae
  #  prediction: band_gap
  #  target: band_gap
  #- metric: mae
  #  prediction: peak
  #  target: peak
  #- metric: mae
  #  prediction: overlap
  #  target: overlap
  # - metric: mae
  #   prediction: hamiltonian_imag
  #   target: hamiltonian_imag
  #- metric: mae
  #  prediction: hamiltonian_imag
  #  target: hamiltonian_imag
  # - metric: mae
  #   prediction: band_energy
  #   target: band_energy
  #- metric: abs_mae
  #  prediction: wavefunction
  #  target: wavefunction

# Generally, the optim_params module only needs to set the initial learning rate (lr)
optim_params:
  lr: 0.01
  lr_decay: 0.5
  lr_patience: 5
  gradient_clip_val: 0.0
  max_epochs: 3000
  min_epochs: 100
  stop_patience: 30

output_nets:
  output_module: HamGNN_out
  HamGNN_out:
    ham_only: true # true: Only the Hamiltonian H is computed; 'false': Fit both H and S
    ham_type: openmx # openmx: fit openmx Hamiltonian; abacus: fit abacus Hamiltonian
    nao_max: 19 # The maximum number of atomic orbitals in the data set, which can be 14, 19 or 27
    add_H0: True # Generally true, the complete Hamiltonian is predicted as the sum of H_scf plus H_nonscf (H0)
    symmetrize: False # if set to true, the Hermitian symmetry constraint is imposed on the Hamiltonian
    calculate_band_energy: False # Whether to calculate the energy bands to train the model
    num_k: 5 # When calculating the energy bands, the number of K points to use
    band_num_control: 8 # `dict`: controls how many orbitals are considered for each atom in energy bands; `int`: [vbm-num, vbm+num]; `null`: all bands
    k_path: null # `auto`: Automatically determine the k-point path; `null`: random k-point path; `list`: list of k-point paths provided by the user
    soc_switch: False # if true, fit the SOC Hamiltonian
    nonlinearity_type: gate # norm or gate
    # spin constrained
    spin_constrained: False
    collinear_spin: False
    minMagneticMoment: 0.5

profiler_params:
  progress_bar_refresh_rat: 1
  train_dir: ./ #The folder for saving training information and prediction results. This directory can be read by tensorboard to monitor the training process.

representation_nets:
  # Network parameters usually do not need to be changed.
  HamGNN_pre:
    cutoff: 24.0
    cutoff_func: cos
    edge_sh_normalization: component
    edge_sh_normalize: true
    ######## Irreps set 1 (crystal): ################
    irreps_edge_sh: 0e + 1o + 2e + 3o + 4e + 5o
    irreps_node_features: 64x0e+64x0o+32x1o+32x1e+20x2o+20x2e+8x3o+8x3e+8x4e
    # irreps_node_features: 32x0e+32x0o+32x1o+32x1e+32x2o+32x2e+32x3o+32x3e+32x4e
    num_layers: 3
    num_radial: 64
    num_types: 64
    rbf_func: bessel
    set_features: true
    num_heads: 4
    radial_MLP: [64, 64]
    correlation: 2
    num_hidden_features: 32
    use_kan: False
    radius_scale: 1.01
    build_internal_graph: False

setup:
  GNN_Net: HamGNNpre
  accelerator: null
  ignore_warnings: true
  checkpoint_path: /public/home/zhongyang/yzhong/HamGNN++/NiBrI_training/version_1/checkpoints/epoch=175-val_loss=0.000000.ckpt # Path to the model weights file
  load_from_checkpoint: False
  resume: False
  num_gpus: 1 # null: use cpu; [i]: use the ith GPU device
  precision: 32
  property: hamiltonian
  stage: fit # fit: training; test: inference